export interface AnalyticEcommerce {
  title: string;
  amount: string;
  background: string;
  border: string;
  icon: string;
  percentage: string;
  color: string;
  number: string;
}

export interface Transaction {
  background: string;
  icon: string;
  title: string;
  time: string;
  amount: string;
  percentage: string;
}

export interface Class {
  _id: string;
  name: string;
  sections: string[];
  schoolId: string;
  attendanceTeacher?: { _id: string; name: string };
  substituteAttendanceTeachers?: { _id: string; name: string }[];
}

export interface AcademicYear {
  _id: string;
  name: string;
  startDate: string;
  endDate: string;
  schoolId: string;
}

export interface StudentAttendanceData {
  totalStudents?: number;
  classes?: Class[];
  overallAttendance?: { Present?: number; Late?: number; Absent?: number };
  classAttendance?: { Present?: number; Late?: number; Absent?: number };
}

export interface TeacherDashboardData {
  totalTeachers?: number;
  presentToday?: number;
  absentToday?: number;
  onLeaveToday?: number;
  pendingLeaveRequests?: number;
  autoGeneratedAbsences?: number;
  averageLeaveBalance?: number;
  isHoliday?: boolean;
}

export interface FeeSummary {
  totalRemainingDue: number;
  totalPaid: number;
  overdueCount: number;
  collectionRate: number;
  invoiceCount: number;
}

export interface ClassBreakdown {
  classId: string;
  className: string;
  totalRemainingDue: number;
  totalPaid: number;
  totalAmount: number;
  overdueCount: number;
  invoiceCount: number;
  collectionRate: number;
}

export interface PaymentMethod {
  method: string;
  totalAmount: number;
}

export interface TopDefaulter {
  studentName: string;
  admissionNo: string;
  className: string;
  remainingDue: number;
}

export interface MonthlyTrend {
  month: string;
  totalPaid: number;
  totalRemainingDue: number;
}

export interface FeeDashboardData {
  summary: FeeSummary;
  breakdownByClass: ClassBreakdown[];
  paymentMethods: PaymentMethod[];
  topDefaulters: TopDefaulter[];
  monthlyTrend: MonthlyTrend[];
}